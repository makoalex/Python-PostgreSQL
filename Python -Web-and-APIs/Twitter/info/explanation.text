1st thing we do is to create a consumer.
    the consumer is the object which represents our application
            this is part of Oauth2 import see project
                    oauth2.Consumer()- that is a class inside oauth2
2. In order to be able to identify our app we need to use the CLIENT KEY/ID and  CLIENT SECRET
    the consumer object cannot be used to make requests to the API,
3 we create a CLIENT that is a client oject in the OAUTH2 library
            we pass the consumer object parameter, the application that client is making requests FOR
4. we can perform the REQUEST ON THE CLIENT- DIFFERENT FROM REQUESTS.GET , BECAUSE TWITTER GOES WELL WITH OAUTH2 LIBRARY
            INSIDE WE HAVE TO OUT THE URL WE WANT TO REQUEST (REQUEST TOKEN URL FIRST),
            because it's a POST URL(check twitter for what type of request it is), we have to give that parameter after the url
            the result is going to be a list of tuples in bytes that we can transform in a dictionary
5. we check to see if the result of the request is a code 200 (ok) other wise we raise an ERROR
6. we import URLIB.PARSE AND PARSE.QSL(parse a query string, and returns a list of name value pairs)
                    if the list is in bytes, we can add the parameter decode
                    WE CREATED A  REQUEST TOKEN WHICH WIL LATER BE USED FOR AUTHORIZATION
7. the next thing after the request token in received would be to get a authorization code.
    for that we have to be redirect via a callback URL but as we don't have a site, Twitter will give us an ID instead
            WE WILL GIVE THE LINK TO FOLLOW A QUERY STRING: ACCESSING THE ULR FOR AUTHORIZATION AND LOOK IN THE REQUEST TOKEN THAT WE HAVE CREATED
            FOR THE OAUTH_TOKEN KEY VALUE PAIR
            we pass that in the format function
8 we get redirect to the prompt where we have to authorize twitter
9. we create a TOKEN OBJECT (OAUTH2.TOKEN()) WHICH WILL TAKE 2 PARAMETERS FROM REQUEST TOKEN: - oauth_token
                                                                                              - oauth_token secret
                                                 and it binds them together so that we can do some operations with that
10. we will recreate the CLIENT as in the 1st line, but we will add as a parameter the TOKEN OBJECT WE CREATED
            the explanation is that the 1st client was used to identify the app in Twitter,
            but not we are trying to tie everything together and get the access token
11. we create another TOKEN OBJECT but this time it is for the access token
        that will perform requests from the RESOURCE SERVER .
            THIS IS OUR HOTEL KEY
12. we will create an AUTHORIZED CLIENT, that takes 2 parameters- the CONSUMER- THE APP WE CREATED ON THE 1ST LINE
                                                                - the TOKEN OBJECT FROM 11.
                                         TOGETHER THESE 2 AND WHENEVER WE MAKE A REQUEST THIS TOKEN WILL BE SENT ALONG WITH THE REQUEST

                                         TWITTER will know it's an access token and we are representing the user that authorized the token

PERFORMING REQUESTS TO TWITTER
1. making a request to search for something, using the AUTHORIZED CLIENT+ SEARCH API + THE VERB we use for the HTTP REQUEST
                                            (the api uses GET )